
pipeline {
    agent any

    environment {
        // Define environment variables
        AWS_ACCESS_KEY_ID = credentials('aws-key') // AWS credentials (if needed)
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret') // AWS credentials (if needed)
    }

    stages {
        stage('CLONE SCM') {
            steps {
                echo 'Cloning code from GitHub...'
                git branch: 'main', url: 'https://github.com/adarsh0331/ultimate-devops-project-aws.git'
            }
        }

        stage('Terraform Init') {
            steps {
                // Initialize Terraform
                echo 'Initializing Terraform...'
                sh 'terraform init'
            }
        }

        stage('Terraform Plan') {
            steps {
                // Run Terraform plan
                echo 'Running Terraform Plan...'
                sh 'terraform plan -out=tfplan'
            }
        }

        stage('Terraform Apply') {
            steps {
                // Apply Terraform changes
                echo 'Applying Terraform changes...'
                sh 'terraform apply -auto-approve tfplan'
            }
        }

        stage('Retrieve Public IP') {
            steps {
                script {
                    // Retrieve the public_ip output from Terraform
                    echo 'Retrieving Terraform Outputs...'
                    def publicIp = sh(script: 'terraform output -raw public_ip', returnStdout: true).trim()
                    echo "Public IP of the EC2 instance: ${publicIp}"
                }
            }
        }
    }

    post {
        success {
            echo 'Terraform deployment completed successfully!'
        }
        failure {
            echo 'Terraform deployment failed. Check the logs for details.'
        }
        always {
            // Clean up workspace
            cleanWs()
        }
    }
}
